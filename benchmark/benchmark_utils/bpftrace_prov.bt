///////////////////////////////////////////////////////////////////////////////
// Initialize
///////////////////////////////////////////////////////////////////////////////

BEGIN {
  if ($1 == 0) {
    printf("%d,%d,%d,fatal_error,Please provide an argument of the pid to trace\n", pid, tid, nsecs);
    exit(1);
  }
  @track_pids[$1] = 1;
  @main_pid[$1] = 1;
  printf("%d,%d,%d,launch_pid,%d\n", pid, tid, nsecs, $1);
}

///////////////////////////////////////////////////////////////////////////////
// Propagate only to children processes
///////////////////////////////////////////////////////////////////////////////

tracepoint:sched:sched_process_fork {
  if (@track_pids[pid]) {
      printf("%d,%d,%d,sched_process_fork,%d\n", pid, tid, nsecs, args->child_pid);
      @track_pids[args->child_pid] = 1;
  }
}

///////////////////////////////////////////////////////////////////////////////
// Exit on exit of child
///////////////////////////////////////////////////////////////////////////////

tracepoint:sched:sched_process_exit {
  if (@track_pids[pid]) {
    printf("%d,%d,%d,sched_process_exit\n", pid, tid, nsecs);
    if (@main_pid[pid]) {
      printf("%d,%d,%d,main_exit\n", pid, tid, nsecs);
      exit();
    }
  }
}
