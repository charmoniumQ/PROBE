--- a/mandala/model.py	1969-12-31 18:00:01.000000000 -0600
+++ b/mandala/model.py	2025-01-11 01:38:14.958140886 -0600
@@ -133,4 +133,5 @@
 
     def _get_hashable_inputs(self, inputs: Dict[str, Ref]) -> Dict[str, Any]:
+        print(9.5, list(inputs.keys()))
         return {k: v for k, v in inputs.items() if not isinstance(v.obj, _Ignore)}
 
--- a/mandala/storage.py	1969-12-31 18:00:01.000000000 -0600
+++ b/mandala/storage.py	2025-01-11 01:40:32.623848605 -0600
@@ -730,4 +730,6 @@
         if not op.__structural__: logger.debug(f"Calling {op.name} with args {bound_arguments}.")
 
+        print(5.5, list(storage_inputs.keys()))
+
         must_version_call = self.versioned and not op.__structural__
 
@@ -737,4 +739,7 @@
             wrapped_inputs[k], struct_calls = self.construct(tp=storage_tps[k], val=v)
             input_calls.extend(struct_calls)
+
+        print(6, list(wrapped_inputs.keys())
+
         if len(input_calls) > 0:
             if not op.__structural__: logger.debug(f"Collected {len(input_calls)} calls for inputs.")
@@ -771,4 +776,5 @@
             # logger.debug(f"Call to {op.name} with hid {call_hid} does not exist; executing.")
             input_hids = {k: v.hid for k, v in wrapped_inputs.items()}
+            print(6.5, list(input_hids.keys()))
             logger.debug(f"HIDs of inputs: {input_hids}")
         # call the function
@@ -799,4 +805,5 @@
             kwargs.update(leftover_kwargs)
             kwargs = self.unwrap(kwargs)
+            print(6.51, list(kwargs.keys()))
 
             if tracer_option is not None:
@@ -1083,4 +1090,5 @@
             apply_defaults=True,
         )
+        print(3, list(storage_input.keys()))
 
         storage_tps = {
@@ -1094,4 +1102,5 @@
             kwarg_keys=kwarg_keys,
         )
+        print(4, list(main_call.inputs.keys()))
         if __config__.get("save_calls", False):
             self.save_call(main_call)
