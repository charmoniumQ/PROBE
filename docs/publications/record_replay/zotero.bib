%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Automatically generated by Zotero   %
% Do not edit                         %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@incollection{braunIssuesAutomaticProvenance2006,
  title = {Issues in {{Automatic Provenance Collection}}},
  booktitle = {Provenance and {{Annotation}} of {{Data}}},
  author = {Braun, Uri and Garfinkel, Simson and Holland, David A. and Muniswamy-Reddy, Kiran-Kumar and Seltzer, Margo I.},
  editor = {Moreau, Luc and Foster, Ian},
  editorb = {Hutchison, David and Kanade, Takeo and Kittler, Josef and Kleinberg, Jon M. and Mattern, Friedemann and Mitchell, John C. and Naor, Moni and Nierstrasz, Oscar and Pandu Rangan, C. and Steffen, Bernhard and Sudan, Madhu and Terzopoulos, Demetri and Tygar, Dough and Vardi, Moshe Y. and Weikum, Gerhard},
  editorbtype = {redactor},
  date = {2006},
  volume = {4145},
  pages = {171--183},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  doi = {10.1007/11890850_18},
  url = {http://link.springer.com/10.1007/11890850_18},
  urldate = {2023-08-23},
  abstract = {Automatic provenance collection describes systems that observe processes and data transformations inferring, collecting, and maintaining provenance about them. Automatic collection is a powerful tool for analysis of objects and processes, providing a level of transparency and pervasiveness not found in more conventional provenance systems. Unfortunately, automatic collection is also difficult. We discuss the challenges we encountered and the issues we exposed as we developed an automatic provenance collector that runs at the operating system level.},
  isbn = {978-3-540-46302-3 978-3-540-46303-0},
  langid = {english},
  keywords = {project-provenance-pp,provenance-tool},
  file = {/home/sam/Zotero/storage/KXYB7A6B/Braun et al. - 2006 - Issues in Automatic Provenance Collection.pdf}
}

@inproceedings{bzeznikNixHPCPackage2017,
  title = {Nix as {{HPC}} Package Management System},
  booktitle = {Proceedings of the {{Fourth International Workshop}} on {{HPC User Support Tools}}},
  author = {Bzeznik, Bruno and Henriot, Oliver and Reis, Valentin and Richard, Olivier and Tavard, Laure},
  date = {2017-11-12},
  series = {{{HUST}}'17},
  pages = {1--6},
  publisher = {{Association for Computing Machinery}},
  location = {{New York, NY, USA}},
  doi = {10.1145/3152493.3152556},
  url = {https://dl.acm.org/doi/10.1145/3152493.3152556},
  urldate = {2023-05-05},
  abstract = {Modern High Performance Computing systems are becoming larger and more heterogeneous. The proper management of software for the users of such systems poses a significant challenge. These users run very diverse applications that may be compiled with proprietary tools for specialized hardware. Moreover, the application life-cycle of these software may exceed the lifetime of the HPC systems themselves. These difficulties motivate the use of specialized package management systems. In this paper, we outline an approach to HPC package development, deployment, management, sharing, and reuse based on the Nix functional package manager. We report our experience with this approach inside the GRICAD HPC center[GRICAD 2017a] in Grenoble over a 12 month period and compare it to other existing approaches.},
  isbn = {978-1-4503-5130-0},
  keywords = {project-acm-rep,project-provenance-pp,research software engineering},
  annotation = {interest: 99},
  file = {/home/sam/Zotero/storage/Z788J5GN/Bzeznik et al. - 2017 - Nix as HPC package management system.pdf}
}

@inproceedings{hassanScalableClusterAuditing2018,
  title = {Towards {{Scalable Cluster Auditing}} through {{Grammatical Inference}} over {{Provenance Graphs}}},
  booktitle = {Proceedings 2018 {{Network}} and {{Distributed System Security Symposium}}},
  author = {Hassan, Wajih Ul and Lemay, Mark and Aguse, Nuraini and Bates, Adam and Moyer, Thomas},
  date = {2018},
  publisher = {{Internet Society}},
  location = {{San Diego, CA}},
  doi = {10.14722/ndss.2018.23141},
  url = {https://www.ndss-symposium.org/wp-content/uploads/2018/02/ndss2018_07B-1_Hassan_paper.pdf},
  urldate = {2023-08-23},
  abstract = {Investigating the nature of system intrusions in large distributed systems remains a notoriously difficult challenge. While monitoring tools (e.g., Firewalls, IDS) provide preliminary alerts through easy-to-use administrative interfaces, attack reconstruction still requires that administrators sift through gigabytes of system audit logs stored locally on hundreds of machines. At present, two fundamental obstacles prevent synergy between system-layer auditing and modern cluster monitoring tools: 1) the sheer volume of audit data generated in a data center is prohibitively costly to transmit to a central node, and 2) systemlayer auditing poses a “needle-in-a-haystack” problem, such that hundreds of employee hours may be required to diagnose a single intrusion.},
  eventtitle = {Network and {{Distributed System Security Symposium}}},
  isbn = {978-1-891562-49-5},
  langid = {english},
  keywords = {project-provenance-pp,provenance-tool},
  file = {/home/sam/Zotero/storage/JRBUPWS8/Hassan et al. - 2018 - Towards Scalable Cluster Auditing through Grammati.pdf}
}

@article{hollandPASSingProvenanceChallenge2008,
  title = {{{PASSing}} the Provenance Challenge},
  author = {Holland, David A. and Seltzer, Margo I. and Braun, Uri and Muniswamy-Reddy, Kiran-Kumar},
  date = {2008},
  journaltitle = {Concurrency and Computation: Practice and Experience},
  volume = {20},
  number = {5},
  pages = {531--540},
  issn = {1532-0634},
  doi = {10.1002/cpe.1227},
  url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/cpe.1227},
  urldate = {2023-08-23},
  abstract = {Provenance-aware storage systems (PASS) are a new class of storage system treating provenance as a first-class object, providing automatic collection, storage, and management of provenance as well as query capabilities. We developed the first PASS prototype between 2005 and 2006, targeting scientific end users. Prior to undertaking the provenance challenge, we had focused on provenance collection and storage, without much emphasis on a query model or language. The challenge forced us to (quickly) develop a query model and infrastructure implementing this model. We present a brief overview of the PASS prototype and a discussion of the evolution of the query model that we developed for the challenge. Copyright © 2007 John Wiley \& Sons, Ltd.},
  langid = {english},
  keywords = {project-provenance-pp,provenance-tool},
  file = {/home/sam/Zotero/storage/VD4HIMW2/Holland et al. - 2008 - PASSing the provenance challenge.pdf;/home/sam/Zotero/storage/8HRDN6SV/cpe.html}
}

@inproceedings{leeSecureProvenanceCloud2015,
  title = {Towards {{Secure Provenance}} in the {{Cloud}}: {{A Survey}}},
  shorttitle = {Towards {{Secure Provenance}} in the {{Cloud}}},
  booktitle = {2015 {{IEEE}}/{{ACM}} 8th {{International Conference}} on {{Utility}} and {{Cloud Computing}} ({{UCC}})},
  author = {Lee, Brian and Awad, Abir and Awad, Mirna},
  date = {2015-12},
  pages = {577--582},
  doi = {10.1109/UCC.2015.102},
  abstract = {Provenance information are meta-data that summarize the history of the creation and the actions performed on an artefact e.g. data, process etc. Secure provenance is essential to improve data forensics, ensure accountability and increase the trust in the cloud. In this paper, we survey the existing cloud provenance management schemes and proposed security solutions. We investigate the current related security challenges resulting from the nature of the provenance model and the characteristics of the cloud and we finally identify potential research directions which we feel necessary t should be covered in order to build a secure cloud provenance for the next generation.},
  eventtitle = {2015 {{IEEE}}/{{ACM}} 8th {{International Conference}} on {{Utility}} and {{Cloud Computing}} ({{UCC}})},
  keywords = {project-provenance-pp},
  file = {/home/sam/Zotero/storage/AN3W669M/Lee et al. - 2015 - Towards Secure Provenance in the Cloud A Survey.pdf}
}

@article{liThreatDetectionInvestigation2021,
  title = {Threat Detection and Investigation with System-Level Provenance Graphs: {{A}} Survey},
  shorttitle = {Threat Detection and Investigation with System-Level Provenance Graphs},
  author = {Li, Zhenyuan and Chen, Qi Alfred and Yang, Runqing and Chen, Yan and Ruan, Wei},
  date = {2021-07-01},
  journaltitle = {Computers \& Security},
  volume = {106},
  pages = {102282},
  issn = {0167-4048},
  doi = {10.1016/j.cose.2021.102282},
  url = {https://www.sciencedirect.com/science/article/pii/S0167404821001061},
  urldate = {2023-08-23},
  abstract = {With the development of information technology, the border of the cyberspace gets much broader and thus also exposes increasingly more vulnerabilities to attackers. Traditional mitigation-based defence strategies are challenging to cope with the current complicated situation. Security practitioners urgently need better tools to describe and modelling attacks for defense. The provenance graph seems like an ideal method for threat modelling with powerful semantic expression ability and attacks historic correlation ability. In this paper, we firstly introduce the basic concepts about system-level provenance graph and present a typical system architecture for provenance graph-based threat detection and investigation. A comprehensive provenance graph-based threat detection system can be divided into three modules: data collection module, data management module, and threat detection modules. Each module contains several components and involves different research problems. We systematically taxonomize and compare the existing algorithms and designs involved in them. Based on these comparisons, we identify the strategy of technology selection for real-world deployment. We also provide insights and challenges about the existing work to guide future research in this area.},
  keywords = {project-provenance-pp,provenance-tool},
  file = {/home/sam/Zotero/storage/EXE45PJ5/Li et al. - 2021 - Threat detection and investigation with system-lev.pdf;/home/sam/Zotero/storage/4NB2FLWF/S0167404821001061.html}
}

@article{moreauSpecialIssueFirst2008,
  title = {Special {{Issue}}: {{The First Provenance Challenge}}},
  shorttitle = {Special {{Issue}}},
  author = {Moreau, Luc and Ludäscher, Bertram and Altintas, Ilkay and Barga, Roger S. and Bowers, Shawn and Callahan, Steven and Chin, George and Clifford, Ben and Cohen, Shirley and Cohen-Boulakia, Sarah and Davidson, Susan and Deelman, Ewa and Digiampietri, Luciano and Foster, Ian and Freire, Juliana and Frew, James and Futrelle, Joe and Gibson, Tara and Gil, Yolanda and Goble, Carole and Golbeck, Jennifer and Groth, Paul and Holland, David A. and Jiang, Sheng and Kim, Jihie and Koop, David and Krenek, Ales and McPhillips, Timothy and Mehta, Gaurang and Miles, Simon and Metzger, Dominic and Munroe, Steve and Myers, Jim and Plale, Beth and Podhorszki, Norbert and Ratnakar, Varun and Santos, Emanuele and Scheidegger, Carlos and Schuchardt, Karen and Seltzer, Margo and Simmhan, Yogesh L. and Silva, Claudio and Slaughter, Peter and Stephan, Eric and Stevens, Robert and Turi, Daniele and Vo, Huy and Wilde, Mike and Zhao, Jun and Zhao, Yong},
  date = {2008-04-10},
  journaltitle = {Concurrency Computat.: Pract. Exper.},
  volume = {20},
  number = {5},
  pages = {409--418},
  issn = {15320626, 15320634},
  doi = {10.1002/cpe.1233},
  url = {https://onlinelibrary.wiley.com/doi/10.1002/cpe.1233},
  urldate = {2022-07-08},
  langid = {english},
  keywords = {project-provenance-pp,provenance},
  annotation = {interest: 87},
  file = {/home/sam/Zotero/storage/A8LJX7P3/Moreau et al. - 2008 - Special Issue The First Provenance Challenge.pdf}
}

@inproceedings{muniswamy-reddyLayeringProvenanceSystems2009,
  title = {Layering in Provenance Systems},
  booktitle = {Proceedings of the 2009 Conference on {{USENIX Annual}} Technical Conference},
  author = {Muniswamy-Reddy, Kiran-Kumar and Braun, Uri and Holland, David A. and Macko, Peter and Maclean, Diana and Margo, Daniel and Seltzer, Margo and Smogor, Robin},
  date = {2009-06-14},
  series = {{{USENIX}}'09},
  pages = {10},
  publisher = {{USENIX Association}},
  location = {{USA}},
  doi = {10.5555/1855807.1855817},
  abstract = {Digital provenance describes the ancestry or history of a digital object. Most existing provenance systems, however, operate at only one level of abstraction: the system call layer, a workflow specification, or the high-level constructs of a particular application. The provenance collectable in each of these layers is different, and all of it can be important. Single-layer systems fail to account for the different levels of abstraction at which users need to reason about their data and processes. These systems cannot integrate data provenance across layers and cannot answer questions that require an integrated view of the provenance. We have designed a provenance collection structure facilitating the integration of provenance across multiple levels of abstraction, including a workflow engine, a web browser, and an initial runtime Python provenance tracking wrapper. We layer these components atop provenance-aware network storage (NFS) that builds upon a Provenance-Aware Storage System (PASS). We discuss the challenges of building systems that integrate provenance across multiple layers of abstraction, present how we augmented systems in each layer to integrate provenance, and present use cases that demonstrate how provenance spanning multiple layers provides functionality not available in existing systems. Our evaluation shows that the overheads imposed by layering provenance systems are reasonable.},
  langid = {english},
  keywords = {project-provenance-pp,provenance,provenance-tool},
  file = {/home/sam/Zotero/storage/GUGJKZNA/Muniswamy-Reddy et al. - Layering in Provenance Systems.pdf;/home/sam/Zotero/storage/XPIHNXFW/Muniswamy-Reddy et al. - Layering in Provenance Systems.pdf;/home/sam/Zotero/storage/EPL6YLK6/Muniswamy-Reddy et al. - Layering in Provenance Systems.html}
}

@inproceedings{muniswamy-reddyProvenanceAwareStorageSystems2006,
  title = {Provenance-{{Aware Storage Systems}}},
  booktitle = {2006 {{USENIX Annual Technical Conference}}},
  author = {Muniswamy-Reddy, Kiran-Kumar and Holland, David A and Braun, Uri and Seltzer, Margo},
  date = {2006},
  url = {https://dash.harvard.edu/handle/1/23853812},
  abstract = {A Provenance-Aware Storage System (PASS) is a storage system that automatically collects and maintains provenance or lineage, the complete history or ancestry of an item. We discuss the advantages of treating provenance as meta-data collected and maintained by the storage system, rather than as manual annotations stored in a separately administered database. We describe a PASS implementation, discussing the challenges it presents, performance cost it incurs, and the new functionality it enables. We show that with reasonable overhead, we can provide useful functionality not available in today’s file systems or provenance management systems.},
  eventtitle = {2006 {{USENIX Annual Technical Conference}}},
  langid = {american},
  keywords = {project-provenance-pp,provenance-tool},
  annotation = {Accepted: 2015-12-07T19:07:43Z},
  file = {/home/sam/Zotero/storage/2NZWHDHT/Muniswamy-Reddy et al. - 2006 - Provenance-Aware Storage Systems.pdf;/home/sam/Zotero/storage/BYWE4X2D/Muniswamy-Reddy et al. - 2006 - Provenance-Aware Storage Systems.pdf}
}

@inproceedings{priedhorskyCharliecloudUnprivilegedContainers2017,
  title = {Charliecloud: Unprivileged Containers for User-Defined Software Stacks in {{HPC}}},
  shorttitle = {Charliecloud},
  booktitle = {Proceedings of the {{International Conference}} for {{High Performance Computing}}, {{Networking}}, {{Storage}} and {{Analysis}}},
  author = {Priedhorsky, Reid and Randles, Tim},
  date = {2017-11-12},
  pages = {1--10},
  publisher = {{ACM}},
  location = {{Denver Colorado}},
  doi = {10.1145/3126908.3126925},
  url = {https://dl.acm.org/doi/10.1145/3126908.3126925},
  urldate = {2022-05-26},
  abstract = {Supercomputing centers are seeing increasing demand for user-defined software stacks (UDSS), instead of or in addition to the stack provided by the center. These UDSS support user needs such as complex dependencies or build requirements, externally required configurations, portability, and consistency. The challenge for centers is to provide these services in a usable manner while minimizing the risks: security, support burden, missing functionality, and performance. We present Charliecloud, which uses the Linux user and mount namespaces to run industry-standard Docker containers with no privileged operations or daemons on center resources. Our simple approach avoids most security risks while maintaining access to the performance and functionality already on offer, doing so in just 800 lines of code. Charliecloud promises to bring an industry-standard UDSS user workflow to existing, minimally altered HPC resources.},
  eventtitle = {{{SC}} '17: {{The International Conference}} for {{High Performance Computing}}, {{Networking}}, {{Storage}} and {{Analysis}}},
  isbn = {978-1-4503-5114-0},
  langid = {english},
  keywords = {containers,hpc,operating systems,project-acm-rep,project-provenance-pp},
  file = {/home/sam/Zotero/storage/T2VWSVNT/3126908.3126925.pdf}
}

@article{timperleyUnderstandingImprovingArtifact2021,
  title = {Understanding and {{Improving Artifact Sharing}} in {{Software Engineering Research}}},
  author = {Timperley, Christopher S. and Herckis, Lauren and Goues, Claire Le and Hilton, Michael},
  date = {2021-07},
  journaltitle = {Empir Software Eng},
  volume = {26},
  number = {4},
  eprint = {2008.01046},
  eprinttype = {arxiv},
  eprintclass = {cs},
  pages = {67},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-021-09973-5},
  url = {http://arxiv.org/abs/2008.01046},
  urldate = {2023-05-06},
  abstract = {In recent years, many software engineering researchers have begun to include artifacts alongside their research papers. Ideally, artifacts, including tools, benchmarks, and data, support the dissemination of ideas, provide evidence for research claims, and serve as a starting point for future research. However, in practice, artifacts suffer from a variety of issues that prevent the realization of their full potential. To help the software engineering community realize the full potential of artifacts, we seek to understand the challenges involved in the creation, sharing, and use of artifacts. To that end, we perform a mixed-methods study including a survey of artifacts in software engineering publications, and an online survey of 153 software engineering researchers. By analyzing the perspectives of artifact creators, users, and reviewers, we identify several high-level challenges that affect the quality of artifacts including mismatched expectations between these groups, and a lack of sufficient reward for both creators and reviewers. Using Diffusion of Innovations as an analytical framework, we examine how these challenges relate to one another, and build an understanding of the factors that affect the sharing and success of artifacts. Finally, we make recommendations to improve the quality of artifacts based on our results and existing best practices.},
  keywords = {artifact evaluation,project-provenance-pp,reproducibility engineering,research software engineering},
  annotation = {interest: 90},
  file = {/home/sam/Zotero/storage/BM7CHTK8/Timperley et al. - 2021 - Understanding and Improving Artifact Sharing in So.pdf;/home/sam/Zotero/storage/ID3NVV6E/2008.html}
}

@inproceedings{wangLprovPracticalLibraryaware2018,
  title = {Lprov: {{Practical Library-aware Provenance Tracing}}},
  shorttitle = {Lprov},
  booktitle = {Proceedings of the 34th {{Annual Computer Security Applications Conference}}},
  author = {Wang, Fei and Kwon, Yonghwi and Ma, Shiqing and Zhang, Xiangyu and Xu, Dongyan},
  date = {2018-12-03},
  series = {{{ACSAC}} '18},
  pages = {605--617},
  publisher = {{Association for Computing Machinery}},
  location = {{New York, NY, USA}},
  doi = {10.1145/3274694.3274751},
  url = {https://dl.acm.org/doi/10.1145/3274694.3274751},
  urldate = {2023-08-24},
  abstract = {With the continuing evolution of sophisticated APT attacks, provenance tracking is becoming an important technique for efficient attack investigation in enterprise networks. Most of existing provenance techniques are operating on system event auditing that discloses dependence relationships by scrutinizing syscall traces. Unfortunately, such auditing-based provenance is not able to track the causality of another important dimension in provenance, the shared libraries. Different from other data-only system entities like files and sockets, dynamic libraries are linked at runtime and may get executed, which poses new challenges in provenance tracking. For example, library provenance cannot be tracked by syscalls and mapping; whether a library function is called and how it is called within an execution context is invisible at syscall level; linking a library does not promise their execution at runtime. Addressing these challenges is critical to tracking sophisticated attacks leveraging libraries. In this paper, to facilitate fine-grained investigation inside the execution of library binaries, we develop Lprov, a novel provenance tracking system which combines library tracing and syscall tracing. Upon a syscall, Lprov identifies the library calls together with the stack which induces it so that the library execution provenance can be accurately revealed. Our evaluation shows that Lprov can precisely identify attack provenance involving libraries, including malicious library attack and library vulnerability exploitation, while syscall-based provenance tools fail to identify. It only incurs 7.0\% (in geometric mean) runtime overhead and consumes 3 times less storage space of a state-of-the-art provenance tool.},
  isbn = {978-1-4503-6569-7},
  keywords = {project-provenance-pp,prov-tool},
  file = {/home/sam/Zotero/storage/3YFG9E7U/Wang et al. - 2018 - Lprov Practical Library-aware Provenance Tracing.pdf}
}

@inproceedings{wangLprovPracticalLibraryaware2018a,
  title = {Lprov: {{Practical Library-aware Provenance Tracing}}},
  shorttitle = {Lprov},
  booktitle = {Proceedings of the 34th {{Annual Computer Security Applications Conference}}},
  author = {Wang, Fei and Kwon, Yonghwi and Ma, Shiqing and Zhang, Xiangyu and Xu, Dongyan},
  date = {2018-12-03},
  series = {{{ACSAC}} '18},
  pages = {605--617},
  publisher = {{Association for Computing Machinery}},
  location = {{New York, NY, USA}},
  doi = {10.1145/3274694.3274751},
  url = {https://dl.acm.org/doi/10.1145/3274694.3274751},
  urldate = {2023-08-24},
  abstract = {With the continuing evolution of sophisticated APT attacks, provenance tracking is becoming an important technique for efficient attack investigation in enterprise networks. Most of existing provenance techniques are operating on system event auditing that discloses dependence relationships by scrutinizing syscall traces. Unfortunately, such auditing-based provenance is not able to track the causality of another important dimension in provenance, the shared libraries. Different from other data-only system entities like files and sockets, dynamic libraries are linked at runtime and may get executed, which poses new challenges in provenance tracking. For example, library provenance cannot be tracked by syscalls and mapping; whether a library function is called and how it is called within an execution context is invisible at syscall level; linking a library does not promise their execution at runtime. Addressing these challenges is critical to tracking sophisticated attacks leveraging libraries. In this paper, to facilitate fine-grained investigation inside the execution of library binaries, we develop Lprov, a novel provenance tracking system which combines library tracing and syscall tracing. Upon a syscall, Lprov identifies the library calls together with the stack which induces it so that the library execution provenance can be accurately revealed. Our evaluation shows that Lprov can precisely identify attack provenance involving libraries, including malicious library attack and library vulnerability exploitation, while syscall-based provenance tools fail to identify. It only incurs 7.0\% (in geometric mean) runtime overhead and consumes 3 times less storage space of a state-of-the-art provenance tool.},
  isbn = {978-1-4503-6569-7},
  keywords = {project-provenance-pp,prov-tool},
  file = {/home/sam/Zotero/storage/UJNPTKYG/Wang et al. - 2018 - Lprov Practical Library-aware Provenance Tracing.pdf}
}
